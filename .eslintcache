[{"/home/ec2-user/environment/react-sample/src/index.js":"1","/home/ec2-user/environment/react-sample/src/App.js":"2","/home/ec2-user/environment/react-sample/src/reportWebVitals.js":"3","/home/ec2-user/environment/react-sample/src/components/Todo.js":"4","/home/ec2-user/environment/react-sample/src/components/TodoItem.js":"5","/home/ec2-user/environment/react-sample/src/components/Input.js":"6","/home/ec2-user/environment/react-sample/src/components/Filter.js":"7","/home/ec2-user/environment/react-sample/src/hooks/storage.js":"8","/home/ec2-user/environment/react-sample/src/lib/util.js":"9","/home/ec2-user/environment/react-sample/src/hooks/fbStorage.js":"10","/home/ec2-user/environment/react-sample/src/lib/firebase.js":"11"},{"size":500,"mtime":1621578121035,"results":"12","hashOfConfig":"13"},{"size":274,"mtime":1621578121031,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1621578121035,"results":"15","hashOfConfig":"13"},{"size":1795,"mtime":1621580184971,"results":"16","hashOfConfig":"13"},{"size":591,"mtime":1621578121035,"results":"17","hashOfConfig":"13"},{"size":634,"mtime":1621578121031,"results":"18","hashOfConfig":"13"},{"size":910,"mtime":1621578121031,"results":"19","hashOfConfig":"13"},{"size":1002,"mtime":1621578121035,"results":"20","hashOfConfig":"13"},{"size":68,"mtime":1621578121035,"results":"21","hashOfConfig":"13"},{"size":566,"mtime":1621580855102,"results":"22","hashOfConfig":"13"},{"size":1006,"mtime":1621580566875,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"jg7vpy",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ec2-user/environment/react-sample/src/index.js",[],["51","52"],"/home/ec2-user/environment/react-sample/src/App.js",[],"/home/ec2-user/environment/react-sample/src/reportWebVitals.js",[],"/home/ec2-user/environment/react-sample/src/components/Todo.js",["53"],"/home/ec2-user/environment/react-sample/src/components/TodoItem.js",["54"],"/* \n  【TodoItemコンポーネント】\n　・Todoアイテムを表示する\n　・チェックボックスにチェックが入っているか管理する\n　・チェックボックスにチェックが入っているかアイテムをグレーアウトする\n*/\nconst handleClickChecBox = (key) => {\n};\n\nfunction TodoItem({item, changeStatus} ) {\n  return (\n    <label className={`panel-block ${item.done? 'has-text-grey-light': \"\"}`}>\n            <input type=\"checkbox\" checked={item.done} onClick={changeStatus}/>\n            {item.text}\n    </label>\n  );\n}\n\nexport default TodoItem;","/home/ec2-user/environment/react-sample/src/components/Input.js",["55"],"import React, { useState } from 'react';\n/* \n  【inputコンポーネント】\n　・新しいTodoを作成するINPUTフィールドを作成するコンポーネント\n　・Enterをクリックされたら入力された文字を使って新しいTodoを作成する\n*/\nfunction Input( { addTodo } ) {\n\n  const handleKeyUp = (event) => {\n    if(event.keyCode === 13){\n      addTodo(event.target.value);\n      event.target.value = \"\"\n    }\n  }\n  return (\n    <div className=\"panel-block\">\n      <input \n        type=\"text\"\n        className=\"input\"\n        onKeyUp = {handleKeyUp}\n      />\n    </div>\n  );\n}\n\nexport default Input;\n","/home/ec2-user/environment/react-sample/src/components/Filter.js",["56","57","58"],"/* \n  【Filterコンポーネント】\n　・該当するTodoをステータス毎にで分けてリスト表示する\n　・タブで表示する\n　・サポートするステータスは「すべて」「未完了」「完了済み」\n*/\nfunction Filter({ value, onChange }) {\n  \n  const clickHandler = (key, e) => {\n    e.preventDefault()\n    onChange(key)\n  }\n  \n  return (\n    <div className=\"panel-tabs\">\n      <a \n        href='#'\n        className={value === 'ALL' ? 'is-active': ''}\n        onClick={clickHandler.bind(null, 'ALL')}\n      >全て</a>\n      <a \n        href='#'\n        className={value === 'TODO' ? 'is-active': ''}\n        onClick={clickHandler.bind(null, 'TODO')}\n      >未完了</a>\n      <a \n        href='#'\n        className={value === 'DONE' ? 'is-active': ''}\n        onClick={clickHandler.bind(null, 'DONE')}\n      >完了済み</a>\n    </div>\n  );\n}\n\nexport default Filter","/home/ec2-user/environment/react-sample/src/hooks/storage.js",["59"],"import { useState, useEffect } from 'react';\n\n/* \n  【Storageフック】\n　・TodoをlocalStorageを使って保存する\n　・以下機能をサポートする\n　  - localstrageに保存されているすべてのTodoの読み出し機能\n　  - Todoをlocalstrageに保存する\n　  - localstrageにあるTodoを削除する\n*/\n\nconst STORAGE_KEY = 'itss-todo';\n\nfunction useStorage() {\n  const [items, setItems] = useState([]);\n　\n　/* 副作用を使う */\n　/*global localStorage*/\n  useEffect(() => {\n    const data = localStorage.getItem(STORAGE_KEY) \n    if (data) {\n      setItems(JSON.parse(data))\n    } else {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify([]))\n    }\n  }, []);\n\n  const putItems = items => {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(items))\n    setItems(items)\n  };\n\n  const clearItems = () => {\n    localStorage.setItem(STORAGE_KEY,JSON.stringify([]))\n    setItems([])\n  };\n\n  return [items, putItems, clearItems];\n}\n\nexport default useStorage;","/home/ec2-user/environment/react-sample/src/lib/util.js",[],"/home/ec2-user/environment/react-sample/src/hooks/fbStorage.js",[],"/home/ec2-user/environment/react-sample/src/lib/firebase.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":25,"column":41,"nodeType":"66","messageId":"67","endLine":25,"endColumn":43},{"ruleId":"68","severity":1,"message":"69","line":7,"column":7,"nodeType":"70","messageId":"71","endLine":7,"endColumn":25},{"ruleId":"68","severity":1,"message":"72","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"73","severity":1,"message":"74","line":16,"column":7,"nodeType":"75","endLine":20,"endColumn":8},{"ruleId":"73","severity":1,"message":"74","line":21,"column":7,"nodeType":"75","endLine":25,"endColumn":8},{"ruleId":"73","severity":1,"message":"74","line":26,"column":7,"nodeType":"75","endLine":30,"endColumn":8},{"ruleId":"76","severity":1,"message":"77","line":18,"column":11,"nodeType":"78","messageId":"79","endLine":18,"endColumn":23},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'handleClickChecBox' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-redeclare","'localStorage' is already defined as a built-in global variable.","Block","redeclaredAsBuiltin","no-global-assign","no-unsafe-negation"]